name: Anaplan Daily Import
on:
  schedule:
    # Run every day at 1:00 UTC
    - cron: '0 1 * * *'
  workflow_dispatch:  # Allows manual triggering
jobs:
  run-anaplan-import:
    runs-on: windows-latest  # Use Windows runner
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Eclipse Temurin distribution
          java-version: '17'       # Using Java 17
      
      - name: Download and setup Anaplan Connect
        run: |
          # Debug: Show all existing directories
          Write-Host "Existing directories:"
          Get-ChildItem -Directory | ForEach-Object { Write-Host $_.Name }

          # Check for Anaplan Connect folders more flexibly
          $anaplanFolders = Get-ChildItem -Directory | Where-Object { $_.Name -like "*anaplan-connect*" }
          
          if ($anaplanFolders.Count -eq 0) {
            Write-Host "No Anaplan Connect folder found. Downloading..."
            
            # Download Anaplan Connect
            Invoke-WebRequest -Uri "https://anaplanenablement.s3.amazonaws.com/Community/Anapedia/anaplan-connect-4.3.1.zip" -OutFile "anaplan-connect-4.3.1.zip"
            
            # Extract to the Anaplan Connect folder
            Expand-Archive -Path "anaplan-connect-4.3.1.zip" -DestinationPath "anaplan-connect-4.3.1"
            
            # Clean up zip file to save space
            Remove-Item -Path "anaplan-connect-4.3.1.zip" -Force
          } else {
            Write-Host "Existing Anaplan Connect folders found:"
            $anaplanFolders | ForEach-Object { Write-Host $_.Name }
            Write-Host "Skipping download."
          }
          
          # Debug: Show Anaplan Connect folder contents
          Write-Host "Anaplan Connect folder contents:"
          Get-ChildItem -Path "." -Directory | Where-Object { $_.Name -like "*anaplan-connect*" } | ForEach-Object {
            Write-Host "Contents of $($_.Name):"
            Get-ChildItem -Path $_.FullName -Recurse
          }
        shell: pwsh
      
      - name: Run Anaplan script
        run: |
          # Ensure script is executable
          Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope Process
          
          # Run the PowerShell script
          ./AnaplanDailyAction.ps1
        shell: pwsh
      
      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: execution-logs
          path: logs/
          retention-days: 7
